package org.example.dao.branch;import org.example.hibernate.HibernateUtils;import org.example.model.Branch;import org.example.utils.Utils;import org.hibernate.Session;import org.hibernate.Transaction;import java.util.List;public class BranchDAO {    public void entry() {    }    public static boolean createBranch(Session session, Branch branch) {        String ifscCode = "HFDC" + Utils.generateRandomNumber(6);        branch.setIfscCode(ifscCode);        String message = Utils.validateBranchData(branch);        if (message == null) {            Transaction transaction = null;            try {                transaction = session.beginTransaction();                session.save(branch);                transaction.commit();            } catch (Exception e) {                if (transaction != null) {                    transaction.rollback();                }                e.printStackTrace();                return false;            } finally {                if (session != null) {                    session.close();                }            }            return true;        }        System.out.println(message);        return false;    }    public static List<Branch> getAllBranchData() {        try (Session session = HibernateUtils.getSessionFactory().openSession()) {            return session.createQuery("from branches", Branch.class).list();        }    }    public static boolean deleteBranch(Session session, String ifscCode) {        Transaction transaction = null;        try {            Branch branch = session.get(Branch.class, ifscCode);            transaction = session.beginTransaction();            session.detach(branch);            transaction.commit();        } catch (Exception e) {            if (transaction != null) {                transaction.rollback();            }            e.printStackTrace();            return false;        } finally {            if (session != null) {                session.close();            }        }        return true;    }}