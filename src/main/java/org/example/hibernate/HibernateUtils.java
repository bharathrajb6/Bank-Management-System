package org.example.hibernate;import org.hibernate.Session;import org.hibernate.SessionFactory;import org.hibernate.boot.registry.StandardServiceRegistryBuilder;import org.hibernate.cfg.Configuration;import org.hibernate.cfg.Environment;import org.hibernate.service.ServiceRegistry;import org.example.model.*;import java.util.Properties;public class HibernateUtils {    private static SessionFactory sessionFactory;    public static SessionFactory getSessionFactory(){        if(sessionFactory==null){            try{                Configuration configuration = new Configuration();                Properties properties = new Properties();                properties.put(Environment.DRIVER, "com.mysql.cj.jdbc.Driver");                properties.put(Environment.URL, "jdbc:mysql://localhost:3306/bankSystem?useSSL=false");                properties.put(Environment.USER, "root");                properties.put(Environment.PASS, "Hunter@4343");                properties.put(Environment.SHOW_SQL, "false"); // Set to "false" for simplicity                properties.put(Environment.CURRENT_SESSION_CONTEXT_CLASS, "thread");                properties.put(Environment.HBM2DDL_AUTO, "update");                configuration.setProperties(properties);                configuration.addAnnotatedClass(Employee.class);                configuration.addAnnotatedClass(Account.class);                configuration.addAnnotatedClass(Branch.class);                configuration.addAnnotatedClass(Admin.class);                configuration.addAnnotatedClass(User.class);                configuration.addAnnotatedClass(AccountTransaction.class);                configuration.addAnnotatedClass(Loan.class);                configuration.addAnnotatedClass(Cards.class);                configuration.addAnnotatedClass(ChequeBook.class);                ServiceRegistry serviceRegistry = new StandardServiceRegistryBuilder()                        .applySettings(configuration.getProperties())                        .build();                sessionFactory = configuration.buildSessionFactory(serviceRegistry);            } catch (Exception e){                e.printStackTrace();            }        }        return sessionFactory;    }}